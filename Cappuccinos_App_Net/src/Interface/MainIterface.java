/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Structures.Capuccino;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class MainIterface extends javax.swing.JFrame {
    public  ArrayList<Capuccino> capuccinoList = new ArrayList<>();
    /**
     * Creates new form MainIterface
     */
    public MainIterface() {
        initComponents();
        ButtonAgregar.addActionListener((ActionEvent e) -> {
            mostrarCapuccinosYFecha();
        });        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ButtonAgregar = new javax.swing.JButton();
        SpinnerCapuccinos = new javax.swing.JSpinner();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BoxEstado = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingresar cantidad de capuccinos realizados: ");

        ButtonAgregar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        ButtonAgregar.setText("Agregar");

        jLabel2.setText("Ingresar Fecha");

        jLabel3.setText("Estado");

        BoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Debiente", "Pagado" }));
        BoxEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxEstadoActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Ver Totales");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(ButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SpinnerCapuccinos, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 122, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(SpinnerCapuccinos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BoxEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxEstadoActionPerformed

    /**
     * @param args the command line arguments
     */
   
    private void mostrarCapuccinosYFecha() {
        try {
            //leer archivo 
             leerData();
            // int carry = 0; 
           //  int totalRealizados = 0; 
          //   double toPayr = 0.0;
          //   int estado = 0; 
            // Obtener el valor del Spinner
             int lastCarry = getLastCarry();
             int cantidadCapuccinos = (int) SpinnerCapuccinos.getValue();  
             Date fechaSeleccionada = jDateChooser1.getDate();
             SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
             String fechaFormateada = formatter.format(fechaSeleccionada);             
             int estado = BoxEstado.getSelectedIndex() == 0 ? 0: 1;
             int totalRealizados = cantidadCapuccinos + lastCarry;
             int carry = totalRealizados % 3;
             int multiplesDeTres = totalRealizados / 3;
             double toPay = multiplesDeTres * 50.0;
             totalRealizados -= carry;
           
        // Mostrar en consola
            System.out.println("Cantidad de Capuccinos: " + cantidadCapuccinos);
            System.out.println("Total realizados: " + totalRealizados);
            System.out.println("Carry: " + carry);
            System.out.println("Total a pagar (toPay): Q." + toPay);
            System.out.println("Last Carry: " + lastCarry);
            System.out.println("Estado: "+estado);
            // Obtener la fecha del DateChooser

            System.out.println("Fecha: " + fechaFormateada);
            Capuccino cpAdd = new Capuccino(cantidadCapuccinos,carry,totalRealizados,toPay,fechaFormateada,estado);
            capuccinoList.add(cpAdd);            
            
            JOptionPane.showMessageDialog(this, "Capuccinos agregados con éxito.\nCantidad: " 
                    + cantidadCapuccinos + "\nFecha: " + fechaFormateada, 
                    "Información", JOptionPane.INFORMATION_MESSAGE);
            soutListCP();
        } catch (Exception e) {
            System.err.println("Error obteniendo los valores: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error obteniendo los valores: " 
                    + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void leerData(){ 
        // cpR,  carry,  total,  totalPag,  fecha, estado
        String filePath = "src/Data/dataCappuccinos.txt";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {          
            String line;
            while ((line = br.readLine()) != null) {
                // Separar la línea por comas
                int cpR = 0, carry = 0, estado = 0,total = 0;
                double toPay = 0.0;
                String fecha = "";            
                String[] values = line.split(",");

                // Asignar los valores a las variables
                fecha = values[0];
                cpR = Integer.parseInt(values[1]);
                carry = Integer.parseInt(values[2]);
                total = Integer.parseInt(values[3]);
                toPay = Double.parseDouble(values[4]);
                estado = Integer.parseInt(values[5]);
                // Imprimir los valores leídos
               /*
                System.out.println("Fecha: " + fecha);
                System.out.println("cpR: " + cpR);
                System.out.println("Carry: " + carry);
                System.out.println("Total: " + total);
                System.out.println("To Pay: " + toPay);
                System.out.println("Estado: " + estado);
                System.out.println("************************************");
                */
               // int cpR, int carry, int total, double totalPag, String fecha,int estado
                Capuccino cpAdd = new Capuccino(cpR,carry,total,toPay,fecha,estado);
                capuccinoList.add(cpAdd);                
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo" + e);
        }         
    }
    
    private void soutListCP(){ 
        if (!capuccinoList.isEmpty()) {
                for (int i = 0; i < capuccinoList.size(); i++) {
                       System.out.println("**************************************************************************************************************");
                      Capuccino capu = capuccinoList.get(i);
                      System.out.println("Fecha: "+capu.getFecha());
                      System.out.println("Capuccinos realizados: " + capu.getCapuccinoRealizado());
                      System.out.println("Carry: " + capu.getCarry());
                      System.out.println("Total Capuccinos: " + capu.getTotal());
                      System.out.println("Total a Cancelar: " + capu.getTotalPagar());
                      String estado = capu.getEstado() ==0? "Debiente": "Cancelado";
                      System.out.println("Estado: " +estado);
                      System.out.println("**************************************************************************************************************");
                  }          
        }
    }
    
    private int getLastCarry(){ 
        int lastCarry = 0; 
        if (!capuccinoList.isEmpty()) {
            int  arrSize = capuccinoList.size() - 1;
           Capuccino capu = capuccinoList.get(arrSize);
           lastCarry = capu.getCarry();
        } 
       // System.out.println("Last Carrrrrryyyy: "+lastCarry);
       // System.out.println("Fecha: Last Carry " + capu.getFecha());
        return lastCarry;
    }
    
    private void OverWriteFile(){ 
        String filePath = "src/Data/dataCappuccinos.txt";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {          
            String line;
            while ((line = br.readLine()) != null) {
                // Separar la línea por comas
                int cpR = 0, carry = 0, estado = 0,total = 0;
                double toPay = 0.0;
                String fecha = "";            
                String[] values = line.split(",");

                // Asignar los valores a las variables
                fecha = values[0];
                cpR = Integer.parseInt(values[1]);
                carry = Integer.parseInt(values[2]);
                total = Integer.parseInt(values[3]);
                toPay = Double.parseDouble(values[4]);
                estado = Integer.parseInt(values[5]);
                // Imprimir los valores leídos
               /*
                System.out.println("Fecha: " + fecha);
                System.out.println("cpR: " + cpR);
                System.out.println("Carry: " + carry);
                System.out.println("Total: " + total);
                System.out.println("To Pay: " + toPay);
                System.out.println("Estado: " + estado);
                System.out.println("************************************");
                */
               // int cpR, int carry, int total, double totalPag, String fecha,int estado
                Capuccino cpAdd = new Capuccino(cpR,carry,total,toPay,fecha,estado);
                capuccinoList.add(cpAdd);                
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo" + e);
        }           
    }
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BoxEstado;
    private javax.swing.JButton ButtonAgregar;
    private javax.swing.JSpinner SpinnerCapuccinos;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
